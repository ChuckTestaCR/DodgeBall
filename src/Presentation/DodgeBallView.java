/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import BusinessLogic.Bola;
import BusinessLogic.Circulo;
import java.awt.Color;
import java.awt.Font;
import java.util.Observable;
import java.util.Observer;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;

/**
 *
 * @author chinc
 */
public class DodgeBallView extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form DodgeBallView
     */
    
        BufferedImage bf;
    
    
    public DodgeBallView() {
        initComponents();
        //Mantiene el JLabel como el "principal"
        //no sera necesario seleccionarlo para poder iniciar a mover el componente
        bf = new BufferedImage(this.getWidth(), this.getHeight(), BufferedImage.TYPE_INT_RGB);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        raqueta = new javax.swing.JLabel();
        esfera = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        MainMenu = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        Exit = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        Settings = new javax.swing.JMenuItem();
        About = new javax.swing.JMenu();
        DodgeBall = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(912, 799));
        setResizable(false);

        background.setLayout(null);

        raqueta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        raqueta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/NaveRaqueta.png"))); // NOI18N
        raqueta.setToolTipText("");
        raqueta.setPreferredSize(new java.awt.Dimension(160, 70));
        background.add(raqueta);
        raqueta.setBounds(950, 470, 190, 60);

        esfera.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/bola nueva.png"))); // NOI18N
        esfera.setMaximumSize(new java.awt.Dimension(110, 110));
        esfera.setMinimumSize(new java.awt.Dimension(110, 110));
        background.add(esfera);
        esfera.setBounds(650, 300, 110, 110);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/1777 prueba.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setToolTipText("");
        background.add(jLabel1);
        jLabel1.setBounds(-7, -4, 1940, 1090);

        File.setText("File");

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        File.add(Exit);

        MainMenu.add(File);

        Edit.setText("Edit");

        Settings.setText("Settings");
        Edit.add(Settings);

        MainMenu.add(Edit);

        About.setText("About");

        DodgeBall.setText("Dodge Ball");
        About.add(DodgeBall);

        MainMenu.add(About);

        setJMenuBar(MainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, 1920, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        //The programm its closed
        this.dispose();
    }//GEN-LAST:event_ExitActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DodgeBallView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DodgeBallView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DodgeBallView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DodgeBallView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new DodgeBallView().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu About;
    private javax.swing.JMenuItem DodgeBall;
    private javax.swing.JMenu Edit;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenu File;
    private javax.swing.JMenuBar MainMenu;
    private javax.swing.JMenuItem Settings;
    private javax.swing.JPanel background;
    private javax.swing.JLabel esfera;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel raqueta;
    // End of variables declaration//GEN-END:variables

    DodgeBallModel model;
    DodgeBallController controller;

    public void setModel(DodgeBallModel model) {
        this.model = model;
        model.addObserver(this);
        this.model.setIcon(raqueta);
        this.model.setBola(esfera);
    }

    public void setController(DodgeBallController controller) {
        this.controller = controller;     
        raqueta.addKeyListener(controller);
        raqueta.setFocusable(true);    
    }  
    
    @Override
    public void update(Observable updatedModel, Object param) {
        super.repaint();
        this.raqueta.repaint();
    }
    
    public void renderModel(DodgeBallModel m, Graphics media) {
        renderCirculo(m.circulo, media);
        renderBola(m.bola, media);
        renderRaqueta(m, media);
    }

    @Override
    public void paint(Graphics graphics) {
        Graphics g = bf.getGraphics();
        super.paint(g);
        this.renderModel(model, g);
        

        Graphics2D g2d = bf.createGraphics();
        //g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
        //RenderingHints.VALUE_ANTIALIAS_ON);
        //g2d.setColor(Color.lightGray);
        //g2d.setFont(new Font("Verdana", Font.BOLD, 50));
        //g2d.drawString(String.valueOf(model.bola.getPuntaje()), 682, 116);
        
        graphics.drawImage(bf, 0, 0, null);
        
    }

    static void renderCirculo(Circulo circulo, Graphics media) {
        media.setColor(Color.green);
        media.drawOval(circulo.getX() , circulo.getY() , circulo.getRadio(), circulo.getRadio());
    }

    void renderBola(Bola bola, Graphics media) {
        media.setColor(Color.red);
        media.drawOval(bola.getX() , bola.getY() , bola.getRadio(), bola.getRadio());
        esfera.setBounds(bola.getX()-3, bola.getY()-49, bola.getRadio(), bola.getRadio());
    }
 
    void renderRaqueta(DodgeBallModel m, Graphics media) {
        media.setColor(Color.green);
        media.drawRect(m.raqueta.getX(), m.raqueta.getY()+50, 190, 60);
    }

    
}
